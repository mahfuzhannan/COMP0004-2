package uk.ac.ucl;

import uk.ac.ucl.entities.Patient;
import uk.ac.ucl.io.ReadCSV;
import uk.ac.ucl.json.JSONFormatter;

import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.util.Collections;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

/**
 * • Has a readFile method that uses the ReadCSV class to read an input file and generate the
 * Patient objects.
 * • Holds the list of Patient objects once they have been generated by the ReadCSV class.
 * • Provides getter methods to access the patient data, for example, get a single JSON
 * structure for all patients, get a JSON structure for a single patient, get the names
 * or ids for all patients, and so on. Add these getter methods as you need them,
 * including others that you find you need. Don’t try to write them all first, only when
 * you actually need a method!
 */
public class Model {

    private ReadCSV readCSV;
    private JSONFormatter jsonFormatter;
    private List<Patient> patients;

    public Model() {
        readCSV = new ReadCSV();
        jsonFormatter = new JSONFormatter();
        patients = Collections.emptyList();
    }

    public List<Patient> readFile(File file) throws IOException {
        patients = readCSV.getPatients(file);
        return patients;
    }

    public String getPatients() {
        return jsonFormatter.formatPatients(patients);
    }

    public String getPatient(UUID uuid) {
        Optional<Patient> optionalPatient = patients.stream()
                .filter(patient -> patient.getId().equals(uuid))
                .findFirst();

            return jsonFormatter.formatPatient(optionalPatient.get());
    }

}
